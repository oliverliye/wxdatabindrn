// Generated by CoffeeScript 1.11.1
var _convertMixed, _convertOnly, bindL, bindR, chompBindLR, clearBindLR, convert, isBind, mixedBind, onlyBind;

onlyBind = /^\{\{[^\{^\}]+\}\}$/;

mixedBind = /\{\{[^\{^\}]+\}\}/g;

bindL = /\{\{/g;

bindR = /\}\}/g;

clearBindLR = function(str) {
  return str.replace(bindL, "").replace(bindR, "");
};

chompBindLR = function(str, lch, rch) {
  if (lch == null) {
    lch = '{';
  }
  if (rch == null) {
    rch = '}';
  }
  return str.replace(/\{\{/g, lch).replace(/\}\}/g, rch);
};

isBind = function(data) {
  return mixedBind.test(data);
};

_convertOnly = function(data) {
  return "{" + (clearBindLR(data)) + "}";
};

_convertMixed = function(data) {
  var bd, binds, i, item, len, noBinds, ret;
  binds = data.match(mixedBind);
  noBinds = data.split(mixedBind);
  ret = [];
  for (i = 0, len = noBinds.length; i < len; i++) {
    item = noBinds[i];
    bd = binds.shift();
    ret.push("'" + item + "'" + (bd ? "+(" + (clearBindLR(bd)) + ")" : ''));
  }
  return "{" + (ret.join('+')) + "}";
};

convert = function(data) {
  if (onlyBind.test(data)) {
    return _convertOnly(data);
  } else if (mixedBind.test(data)) {
    return _convertMixed(data);
  }
};

module.exports = {
  clearBindLR: clearBindLR,
  chompBindLR: chompBindLR,
  convert: convert,
  isBind: isBind
};
